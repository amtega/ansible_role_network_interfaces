---
# Cleanup

- name: Cleanup
  block:
    - name: Cleanup NetworkManager
      block:
        - name: Gather service facts
          ansible.builtin.service_facts:

        - name: Disable NetworkManager service
          ansible.builtin.service:
            name: NetworkManager
            enabled: no
            state: stopped
          when: >-
            "NetworkManager.service" in ansible_facts.services.keys() | list
            and ansible_facts.services["NetworkManager.service"].status
                | default("")
                != "not-found"

        - name: Remove NetworkManager package
          ansible.builtin.package:
            name: NetworkManager
            state: absent
          environment: "{{ proxy_client_environment }}"
      when: ansible_facts.distribution_major_version is version("7", ">=")

    - name: Remove unnecessary config files
      ansible.builtin.file:
        path: "{{ network_interfaces_config_file }}"
        state: absent
      loop: >-
        {{ lookup('template', 'files_to_clean.yml.j2') | from_yaml | unique }}
      loop_control:
        loop_var: network_interfaces_config_file
      notify:
        - reboot host
        - wait host
  tags:
    - role::network_interfaces
    - role::network_interfaces::cleanup